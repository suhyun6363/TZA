{"ast":null,"code":"var _jsxFileName = \"/Users/yeeunahn/Desktop/personal_color_kiosk/src/personal_color/ColorMeasurement.js\",\n  _s = $RefreshSig$();\n// ColorMeasurement.js\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ColorMeasurement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorMeasurement = () => {\n  _s();\n  const [isClicked, setIsClicked] = useState(false);\n  const navigate = useNavigate(); // useNavigate를 사용합니다.\n\n  const handleScreenClick = () => {\n    setIsClicked(true);\n  };\n  const handleMeasureButtonClick = () => {\n    // \"측정하기\" 버튼을 눌렀을 때 /capture 페이지로 이동합니다.\n    navigate(\"/capture\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `color-measurement ${isClicked ? \"clicked\" : \"\"}`,\n    onClick: handleScreenClick,\n    children: isClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"measurement-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD37C\\uC2A4\\uB110\\uCEEC\\uB7EC \\uCE21\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMeasureButtonClick,\n        children: \"\\uCE21\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD654\\uBA74\\uC744 \\uD074\\uB9AD\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorMeasurement, \"JtRRiE0BQhqVUj4J0nZ90U2Lh0A=\", false, function () {\n  return [useNavigate];\n});\n_c = ColorMeasurement;\nexport default ColorMeasurement;\nvar _c;\n$RefreshReg$(_c, \"ColorMeasurement\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ColorMeasurement","_s","isClicked","setIsClicked","navigate","handleScreenClick","handleMeasureButtonClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeeunahn/Desktop/personal_color_kiosk/src/personal_color/ColorMeasurement.js"],"sourcesContent":["// ColorMeasurement.js\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ColorMeasurement.css\";\n\nconst ColorMeasurement = () => {\n  const [isClicked, setIsClicked] = useState(false);\n  const navigate = useNavigate(); // useNavigate를 사용합니다.\n\n  const handleScreenClick = () => {\n    setIsClicked(true);\n  };\n\n  const handleMeasureButtonClick = () => {\n    // \"측정하기\" 버튼을 눌렀을 때 /capture 페이지로 이동합니다.\n    navigate(\"/capture\");\n  };\n\n  return (\n    <div\n      className={`color-measurement ${isClicked ? \"clicked\" : \"\"}`}\n      onClick={handleScreenClick}\n    >\n      {isClicked ? (\n        <div className=\"measurement-screen\">\n          <h2>퍼스널컬러 측정하기</h2>\n          <button onClick={handleMeasureButtonClick}>측정하기</button>\n        </div>\n      ) : (\n        <p>화면을 클릭하세요</p>\n      )}\n    </div>\n  );\n};\n\nexport default ColorMeasurement;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMG,wBAAwB,GAAGA,CAAA,KAAM;IACrC;IACAF,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EAED,oBACEL,OAAA;IACEQ,SAAS,EAAG,qBAAoBL,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;IAC7DM,OAAO,EAAEH,iBAAkB;IAAAI,QAAA,EAE1BP,SAAS,gBACRH,OAAA;MAAKQ,SAAS,EAAC,oBAAoB;MAAAE,QAAA,gBACjCV,OAAA;QAAAU,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBd,OAAA;QAAQS,OAAO,EAAEF,wBAAyB;QAAAG,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,gBAENd,OAAA;MAAAU,QAAA,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAChB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5BID,gBAAgB;EAAA,QAEHH,WAAW;AAAA;AAAAiB,EAAA,GAFxBd,gBAAgB;AA8BtB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}